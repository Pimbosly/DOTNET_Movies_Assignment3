// <auto-generated />
using System;
using Csharp_WebAPI_Assignment3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Csharp_WebAPI_Assignment3.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    partial class MoviesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Csharp_WebAPI_Assignment3.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Picture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "The Pim",
                            FullName = "Pim Westervoort",
                            Gender = "Male",
                            Picture = "www.picturepim.com"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Master of .NET",
                            FullName = "Warren West",
                            Gender = "Male",
                            Picture = "www.picturewarren.com"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Master of Javascript",
                            FullName = "Dewald Els",
                            Gender = "Male",
                            Picture = "www.picturedewald.com"
                        });
                });

            modelBuilder.Entity("Csharp_WebAPI_Assignment3.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchise");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Movies about a superhero in a batcostume",
                            Name = "Batman Trilogy"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Movies about a flying superhero in a cape",
                            Name = "Superman Trilogy"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Movies about a detective solving mysteries",
                            Name = "Holmes"
                        });
                });

            modelBuilder.Entity("Csharp_WebAPI_Assignment3.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ReleaseYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trailer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 3,
                            Director = "batman director",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "www.batmanpicture.com",
                            ReleaseYear = new DateTime(2003, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Batman",
                            Trailer = "www.batmantrailer.com"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Director = "superman director",
                            FranchiseId = 2,
                            Genre = "Action",
                            Picture = "www.supermanpicture.com",
                            ReleaseYear = new DateTime(2002, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Superman",
                            Trailer = "www.supermantrailer.com"
                        },
                        new
                        {
                            Id = 3,
                            CharacterId = 1,
                            Director = "holmes director",
                            FranchiseId = 3,
                            Genre = "Detective, Action",
                            Picture = "www.holmespicture.com",
                            ReleaseYear = new DateTime(2010, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sherlock Holmes",
                            Trailer = "www.holmestrailer.com"
                        },
                        new
                        {
                            Id = 4,
                            CharacterId = 2,
                            Director = "IT director",
                            FranchiseId = 3,
                            Genre = "Horror",
                            Picture = "www.itpicture.com",
                            ReleaseYear = new DateTime(2012, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "IT",
                            Trailer = "www.ittrailer.com"
                        },
                        new
                        {
                            Id = 5,
                            CharacterId = 1,
                            Director = "stardust director",
                            FranchiseId = 2,
                            Genre = "Fantasy, Adventure",
                            Picture = "www.stardustpicture.com",
                            ReleaseYear = new DateTime(2009, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Stardust",
                            Trailer = "www.stardusttrailer.com"
                        });
                });

            modelBuilder.Entity("Csharp_WebAPI_Assignment3.Models.Movie", b =>
                {
                    b.HasOne("Csharp_WebAPI_Assignment3.Models.Character", "Character")
                        .WithMany("Movies")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Csharp_WebAPI_Assignment3.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("Csharp_WebAPI_Assignment3.Models.Character", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Csharp_WebAPI_Assignment3.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
